<?xml version="1.0"?>
<robot name="ur5_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!--
    Convenience wrapper for the 'ur_robot' macro which provides default values
    for the various "parameters files" parameters for a UR5.

    This file can be used when composing a more complex scene with one or more
    UR5 robots.

    While the generic 'ur_robot' macro could also be used, it would require
    the user to provide values for all parameters, as that macro does not set
    any model-specific defaults (not even for the generic parameters, such as
    the visual and physical parameters and joint limits).

    Refer to the main 'ur_macro.xacro' in this package for information about
    use, contributors and limitations.

    NOTE: users will most likely want to override *at least* the
          'kinematics_parameters_file' parameter. Otherwise, a default kinematic
          model will be used, which will almost certainly not correspond to any
          real robot.
  -->
  <xacro:macro name="ur5_robot" params="
   prefix
   joint_limits_parameters_file:='$(find ur_description)/config/ur5/joint_limits.yaml'
   kinematics_parameters_file:='$(find ur_description)/config/ur5/default_kinematics.yaml'
   physical_parameters_file:='$(find ur_description)/config/ur5/physical_parameters.yaml'
   visual_parameters_file:='$(find ur_description)/config/ur5/visual_parameters.yaml'
   transmission_hw_interface:=hardware_interface/EffortJointInterface
   safety_limits:=false
   safety_pos_margin:=0.15
   safety_k_position:=20"
  >
    <xacro:include filename="$(find ur_description)/urdf/inc/ur_macro.xacro"/>
    <xacro:ur_robot
      prefix="${prefix}"
      joint_limits_parameters_file="${joint_limits_parameters_file}"
      kinematics_parameters_file="${kinematics_parameters_file}"
      physical_parameters_file="${physical_parameters_file}"
      visual_parameters_file="${visual_parameters_file}"
      transmission_hw_interface="${transmission_hw_interface}"
      safety_limits="${safety_limits}"
      safety_pos_margin="${safety_pos_margin}"
      safety_k_position="${safety_k_position}"
    />

    <!-- Add the gazebo_ros_control plugin -->
    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>${prefix}</robotNamespace>
      </plugin>
    </gazebo>

   <link name="world"/>
    <joint name="world_joint" type="fixed">
      <parent link="world"/>
      <child link="base_link"/>
    </joint>

    <!-- Set initial joint positions -->
    <joint name="${prefix}shoulder_pan_joint" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}base_link"/>
      <child link="${prefix}shoulder_link"/>
      <axis xyz="0 0 1"/>
      <limit effort="150" velocity="1.0" lower="-3.14" upper="3.14"/>
      <dynamics damping="0.1" friction="0.1"/>
      <safety_controller k_velocity="1.0" k_position="20.0" soft_lower_limit="-3.14" soft_upper_limit="3.14"/>
      <calibration rising="0.0"/>
      <mimic joint=""/>
      <default>0.0</default> <!-- Set initial position -->
    </joint>

    <joint name="${prefix}shoulder_lift_joint" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}shoulder_link"/>
      <child link="${prefix}upper_arm_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="150" velocity="1.0" lower="-3.14" upper="3.14"/>
      <dynamics damping="0.1" friction="0.1"/>
      <safety_controller k_velocity="1.0" k_position="20.0" soft_lower_limit="-3.14" soft_upper_limit="3.14"/>
      <calibration rising="0.0"/>
      <mimic joint=""/>
      <default>-1.57</default> <!-- Set initial position -->
    </joint>

    <joint name="${prefix}elbow_joint" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}upper_arm_link"/>
      <child link="${prefix}forearm_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="150" velocity="1.0" lower="-3.14" upper="3.14"/>
      <dynamics damping="0.1" friction="0.1"/>
      <safety_controller k_velocity="1.0" k_position="20.0" soft_lower_limit="-3.14" soft_upper_limit="3.14"/>
      <calibration rising="0.0"/>
      <mimic joint=""/>
      <default>1.57</default> <!-- Set initial position -->
    </joint>

    <joint name="${prefix}wrist_1_joint" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}forearm_link"/>
      <child link="${prefix}wrist_1_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="150" velocity="1.0" lower="-3.14" upper="3.14"/>
      <dynamics damping="0.1" friction="0.1"/>
      <safety_controller k_velocity="1.0" k_position="20.0" soft_lower_limit="-3.14" soft_upper_limit="3.14"/>
      <calibration rising="0.0"/>
      <mimic joint=""/>
      <default>0.0</default> <!-- Set initial position -->
    </joint>

    <joint name="${prefix}wrist_2_joint" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}wrist_1_link"/>
      <child link="${prefix}wrist_2_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="150" velocity="1.0" lower="-3.14" upper="3.14"/>
      <dynamics damping="0.1" friction="0.1"/>
      <safety_controller k_velocity="1.0" k_position="20.0" soft_lower_limit="-3.14" soft_upper_limit="3.14"/>
      <calibration rising="0.0"/>
      <mimic joint=""/>
      <default>0.0</default> <!-- Set initial position -->
    </joint>

    <joint name="${prefix}wrist_3_joint" type="revolute">
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <parent link="${prefix}wrist_2_link"/>
      <child link="${prefix}wrist_3_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="150" velocity="1.0" lower="-3.14" upper="3.14"/>
      <dynamics damping="0.1" friction="0.1"/>
      <safety_controller k_velocity="1.0" k_position="20.0" soft_lower_limit="-3.14" soft_upper_limit="3.14"/>
      <calibration rising="0.0"/>
      <mimic joint=""/>
      <default>0.0</default> <!-- Set initial position -->
    </joint>

  </xacro:macro>
</robot>